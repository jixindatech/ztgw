# https://sematext.com/blog/rsyslog-8-1-elasticsearch-output-performance/
# https://www.rsyslog.com/doc/v8-stable/configuration/templates.html#property-statement
module(load="omelasticsearch")

module(load="imtcp") # needs to be done just once
#input(type="imtcp" port="514" address="127.0.0.1" rcvbufSize="1m" ruleset="tcpinput")
input(type="imtcp" port="514" address="127.0.0.1" Ruleset="tcpinput")

template(name="tcpelastic" type="list" option.json="on"){
    constant(value="{")
        constant(value="\"user\":\"") property(name="msg" regex.expression="(user=([^ ]*))" regex.type="ERE" regex.submatch="2" regex.nomatchmode="BLANK")
        constant(value="\",\"resource\":\"") property(name="msg" regex.expression="(resource=([^ ]*))" regex.type="ERE" regex.submatch="2" regex.nomatchmode="BLANK")
        constant(value="\",\"status\":\"") property(name="msg" regex.expression="(status=([^ ]*))" regex.type="ERE" regex.submatch="2" regex.nomatchmode="BLANK")
        constant(value="\",\"times\":") property(name="msg" regex.expression="(time=([^ ]*))" regex.type="ERE" regex.submatch="2" regex.nomatchmode="BLANK")
        constant(value=",\"ip\":\"") property(name="msg" regex.expression="(ip=([^ ]*))" regex.type="ERE" regex.submatch="2" regex.nomatchmode="BLANK")
        constant(value="\",\"msg\":\"") property(name="msg")
    constant(value="\"}")
}

ruleset(name="tcpinput") {
    action(type="omelasticsearch" server="192.168.91.100" serverport="9200" template="tcpelastic" searchIndex="gwtest" searchType="events")
    action(type="omfile" file="/tmp/es.log" template="tcpelastic")
    action(type="omfile" file="/tmp/raw.log")
}
